

CREATE TABLE Manufacturers (
  Code INTEGER,
  Name VARCHAR(255) NOT NULL,
  PRIMARY KEY (Code)   
);

CREATE TABLE Products (
  Code INTEGER,
  Name VARCHAR(255) NOT NULL ,
  Price DECIMAL NOT NULL ,
  Manufacturer INTEGER NOT NULL,
  PRIMARY KEY (Code), 
  FOREIGN KEY (Manufacturer) REFERENCES Manufacturers(Code)
);

INSERT INTO Manufacturers(Code,Name) VALUES(1,'Sony');
INSERT INTO Manufacturers(Code,Name) VALUES(2,'Creative Labs');
INSERT INTO Manufacturers(Code,Name) VALUES(3,'Hewlett-Packard');
INSERT INTO Manufacturers(Code,Name) VALUES(4,'Iomega');
INSERT INTO Manufacturers(Code,Name) VALUES(5,'Fujitsu');
INSERT INTO Manufacturers(Code,Name) VALUES(6,'Winchester');

INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(1,'Hard drive',240,5);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(2,'Memory',120,6);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(3,'ZIP drive',150,4);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(4,'Floppy disk',5,6);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(5,'Monitor',240,1);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(6,'DVD drive',180,2);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(7,'CD drive',90,2);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(8,'Printer',270,3);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(9,'Toner cartridge',66,3);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(10,'DVD burner',180,2);

select * from Products;

-----------------------------


1.Select the names of all the products in the store.
select * from products where name is not null;

2.Select the names and the prices of all the products in the store.
select * from products where name is not null or price is not null;

3.Select the name of the products with a price less than or equal to 200.
select * from products where name is not null and price <=200;

4.Select all the products with a price between 60 and 120.
select * from products where price >=60 AND price <=120;

5. Select the name and price in cents (i.e., the price must be multiplied by 100).
select name, price*100 from products;

6.Compute the average price of all the products.
select AVG(price) from products;
> 154.1

7.Compute the average price of all products with manufacturer code equal to 2.
select AVG(price) from products where code=2;
> 120

8. Compute the number of products with a price larger than or equal to 180.
select count(*) from products where price >=180;


9. Select the name and price of all products with a price larger than or equal to 180
   and sort first by price (in descending order), and then by name (in ascending order).
select * from products where name is not null and price >=180 order by price desc, name asc;


10.Add a new product: Loudspeakers, 70, manufacturer 2.
insert into products values (11,'Loudspeakers',70,2)


11.Update the name of product 8 to "Laser Printer".
update products set name='Laser Printer' where code=8;

12.Apply a 10% discount to all products.
update products set price=price*0.9;


13.Apply a 10% discount to all products with a price larger than or equal to 120.
update products set price=price*0.9 where price>=120;

select name, price as calculation from products; 

